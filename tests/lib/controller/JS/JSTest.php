<?php

require_once dirname(__FILE__) . '/../../../../lib/controller/JS/JS.php';

/**
 * Test class for JS.
 * Generated by PHPUnit on 2012-06-07 at 18:21:54.
 */
class JSTest extends PHPUnit_Framework_TestCase {
	
	public function assertScript($expected, $actual){
		if($actual instanceof Structure){
			$actual = $actual->render(JS::$devMode);
		}
		$this->assertEquals($expected, $actual);
	}
	
	/**
	 * @test 
	 */
	public function testSimpleRenderAlert(){
		JS::$devMode = true;
		$render = JS::alert("text");		
		$this->assertScript("alert(\"text\");", $render);
	}
	
	public function testSimpleRenderGetHTML(){
		JS::$devMode = true;
		$this->assertScript("\$(\"#id\").html();", JS::getHTML("#id"));
	}
	
	public function testComplexRenderAlert(){
		JS::$devMode = true;
		$render = JS::alert("text") . JS::alert("text");
		$this->assertScript("alert(\"text\");\nalert(\"text\");\n", $render);
	}
	
	public function testInnerJSObjects(){
		JS::$devMode = true;
		$render = JS::alert(JS::getHTML("#id"));
		$this->assertScript("alert($(\"#id\").html());", $render);
	}
	
	public function testConcatAndComplexRender(){
		JS::$devMode = true;	
		$render = JS::alert("text") .
			JS::alert(
				JS::concat("text", JS::getHTML('#id'))
			);
		$this->assertScript("alert(\"text\");\nalert(\"text\" + \$(\"#id\").html());\n", $render);
	}
	
	public function testConcatWithNumbers(){
		JS::$devMode = true;
		$this->assertScript("alert(\"2\" + \"2\");", JS::alert(JS::concat(2, 2)));
	}
	
	public function testIf(){
		JS::$devMode = true;
		$render = JS::_if(false, JS::alert("text"));
		$this->assertScript("if(false){\n\talert(\"text\")\n}", $render);
	}
	
	public function testIfProductionMode(){
		JS::$devMode = false;
		$render = JS::_if(true, JS::alert("text"));
		$this->assertScript("if(true){alert(\"text\")}", $render);
	}
	
	public function testIfElse(){
		JS::$devMode = true;
		$render = JS::_if(true, JS::alert("text"), JS::alert("text"));
		$this->assertScript("if(true){\n\talert(\"text\")\n} else {\n\talert(\"text\")\n}", $render);
	}
	
	public function testIfElseIf(){
		JS::$devMode = false;
		$render = JS::_ifelse(true, JS::alert("text"), true, JS::alert("text"));
		$this->assertScript("if(true){alert(\"text\")}else if(true){alert(\"text\")}", $render);
	}
	
	public function testIfElseIfElse(){
		JS::$devMode = false;
		$render = JS::_ifelse(true, JS::alert("text"), true, JS::alert("text"), JS::alert("text"));
		$this->assertScript("if(true){alert(\"text\")}else if(true){alert(\"text\")}else{alert(\"text\")}", $render);
	}
	
	public function testIfElseIfElseDevMode(){
		JS::$devMode = true;
		$render = JS::_ifelse(true, JS::alert("text"), true, JS::alert("text"), JS::alert("text"));
		$this->assertScript("if(true){\n\talert(\"text\")\n} else if(true){\n\talert(\"text\")\n} else {\n\talert(\"text\")\n}", $render);		
	}
	
	public function testNestedIfs(){
		JS::$devMode = true;
		$render = JS::_ifelse(
				true, 
					JS::_if(true, 
						JS::alert("text"), 
					//else
						JS::alert("text")
					), 
				true, 
					JS::_if(true, 
						JS::alert("text")
					)
			  );
		$expected = 
			"if(true){\n".
			"\tif(true){\n".
			"\t\talert(\"text\")\n".
			"\t} else {\n".
			"\t\talert(\"text\")\n".
			"\t}\n".
			"} else if(true){\n".
			"\tif(true){\n".
			"\t\talert(\"text\")\n".
			"\t}\n".
			"}";
		$this->assertScript($expected, $render);
	}
	

}

?>
